Away in a manger, no crib for a bed,
The little Lord Jesus laid down his sweet head.
The stars in the bright sky looked down where he lay,
The little Lord Jesus asleep in the hay.

The cattle are lowing, the baby awakes,
But little Lord Jesus no crying he makes.
I love Thee, Lord Jesus, look down from the sky
And stay by my cradle 'til morning is nigh.

Be near me, Lord Jesus, I ask Thee to stay
Close by me forever, and love me, I pray.
Bless all the dear children in thy tender care,
And take us to heaven, to live with Thee there.

The Lord is my shepherd; I shall not want.

He maketh me to lie down in green pastures: he leadeth me beside the still waters.

He restoreth my soul: he leadeth me in the paths of righteousness for his name's sake.

Yea, though I walk through the valley of the shadow of death, I will fear no evil: for thou art with me; thy rod and thy staff they comfort me.

Thou preparest a table before me in the presence of mine enemies: thou anointest my head with oil; my cup runneth over.

Surely goodness and mercy shall follow me all the days of my life: and I will dwell in the house of the Lord for ever.

When forty winters shall besiege thy brow,
And dig deep trenches in thy beauty's field,
Thy youth's proud livery, so gazed on now,
Will be a tattered weed of small worth held.
Then being asked where all thy beauty lies,
Where all the treasure of thy lusty days,
To say within thine own deep-sunken eyes
Were an all-eating shame and thriftless praise.
How much more praise deserved thy beauty's use
If thou couldst answer 'This fair child of mine
Shall sum my count, and make my old excuse',
Proving his beauty by succession thine.
This were to be new made when thou art old,
And see thy blood warm when thou feel'st it cold.
It goes without saying that humans (mammals identifiable as those that stand upright and are
comparatively advanced and capable of detailed thought) have pretty remarkable bodies, given all that
they've accomplished. (Furthermore, an especially intelligent human brain produced this text!) To be
sure, humans have overcome predators, disease, and all sorts of other obstacles over thousands of
years.
To fully understand and appreciate these accomplishments, let's take at some of the most well-known
parts of the human body!
The head, or the spherical body part that contains the brain and rests at the top of the human body,
has quite a few individual organs and body parts on it. (It should quickly be mentioned that hair
occupies the space on top of the head, and the ears, the organs responsible for hearing, are located
on either side of the head.) From top to bottom, the eyebrows, or horizontal strips of hair that can be
found above the eye, are the first components of the head. The eyes are below them, and are round,
orb-like organs that allow humans to see.
The eyes make way for the nose, or an external (sticking-out) organ that plays an important part in the
breathing and bacteria-elimination processes. Below that is the mouth, or a wide, cavernous organ
that chews food, removes bacteria, helps with breathing, and more. The mouth contains teeth, or
small, white-colored, pointed body parts used to chew food, and the tongue, or a red-colored,
boneless organ used to chew food and speak.
The neck is the long body part that connects the head to the chest (the muscular body part that
protects the heart and lungs), and the stomach, or the part of the body that contains food and
liquid-processing organs, comes below that.
The legs are the long, muscular body parts that allow humans to move from one spot to another and
perform a variety of actions. Each leg contains a thigh (a thick, especially muscular body part used to
perform strenuous motions; the upper part of the leg) and a calf (thinner, more flexible body part that
absorbs the shock associated with movement; the lower part of the leg). Feet can be found at the
bottom of legs, and each foot is comprised of five toes, or small appendages that help balance.
Arms are long, powerful body parts that are located on either side of chest, below the shoulders;arms
are comprised of biceps (the thicker, more powerful upper portion), and forearms (the thinner, more
flexible lower portion). Hands, or small, gripping body parts used for a tremendous number of actions,
are at the end of arms. Each hand contains five fingers, or small appendages used to grip objects.
The aforementioned shoulders are rounded body parts that aid arms' flexibility. One's back is found
on the opposite side of the stomach, and is a flat section of the body that contains important muscles
that're intended to protect the lungs and other internal organs, in addition to helping humans perform
certain motions and actions.

Last April, John took a trip to Las Vegas, Nevada. Las Vegas is a popular destination in the western
portion of the United States. The town is most popular for its casinos, hotels, and exciting nightlife.
In downtown Las Vegas, John spent a lot of time on The Strip, which is a 2.5 mile stretch of shopping,
entertainment venues, luxury hotels, and fine dining experiences. This is probably the most commonly
visited tourist area in the city. The Strip at night looks especially beautiful. All of the buildings light up
with bright, neon, eye-catching signs to attract visitor attention. A stay in Las Vegas can feel similar to a
visit to many popular cities worldwide. Many of the hotels have miniature versions of important
international sites and monuments. These famous landmarks include the Eiffel Tower, Venice, and
even ancient Rome.
One day, John took a side trip outside of the city to visit the Grand Canyon, one of the Seven Wonders
of the Natural World. The canyon offers a breathtaking view of Nevada's ridges and natural landscape.
John especially liked the canyon because it was removed from all of the noise and movement in
downtown Las Vegas.
John had a great time during his trip to Las Vegas. He did not win a lot of money in the casinos.
However, he managed to see a lot of amazing sites during his visit to this city that never sleeps. Yellowstone National Park, located in Idaho, Montana, and Wyoming, was established as the first
national park in the United States. The park is a popular destination for visitors who enjoy ecological
tourism as it offers forests, mountains, and abundant ecosystems to explore. Some of Yellowstone's
most well-known landmarks are its geothermal hot springs and geysers, the most famous of which is
named Old Faithful.
Last fall, Lisa and her friends decided to take a camping trip to Yellowstone National Park. They
arranged to stay at one of the park's many convenient campsites. For their camping trip, they brought
their backpacks, sleeping bags, and a cooler of food and drinks. They pitched their tents immediately
upon arriving to their campsite. During their trip, Lisa and her friends hiked the many trails of the
park, exploring its natural surroundings. In the forest, they saw a lot of local wildlife. Lisa was
surprised to see a family of grizzly bears, some gray wolves, and even bald eagles flying overhead.
Outside of the woods, they admired the beauty of some of Yellowstone's natural cascades.
Since Yellowstone contains many hot springs and the world's largest area of active geysers, Lisa and
her friends visited many different geyser sites. They even spent an afternoon swimming in
Yellowstone's Boiling River. Of all of the sites, Lisa and her friends agreed that Old Faithful was the
most impressive. Lisa and her friends waited patiently for the geyser to erupt. After about 40 minutes,
a stream of boiling water over 100 feet tall sprayed from the ground and up into the air. Fortunately,
no one got wet! While eating at a restaurant is an enjoyable and convenient occasional treat, most individuals and
families prepare their meals at home. To make breakfast, lunch, and dinner daily, these persons must
have the required foods and ingredients on hand and ready to go; foods and ingredients are typically
purchased from a grocery store, or an establishment that distributes foods, drinks, household
products, and other items that're used by the typical consumer.
Produce, or the term used to describe fresh fruits and vegetables, is commonly purchased by grocery
store shoppers. In terms of fruit, most grocery stores offer bananas, apples, oranges, blackberries,
raspberries, grapes, pineapples, cantaloupes, watermelons, and more; other grocery stores with larger
produce selections might offer the listed fruits in addition to less common fruits, including mangoes,
honeydews, starfruits, coconuts, and more.
Depending on the grocery store, customers can purchase fruits in a few different ways. Some stores
will charge a set amount per pound of fruit, and will weigh customers' fruit purchases and bill them
accordingly; other stores will charge customers for each piece of fruit they buy, or for bundles of fruit
(a bag of bananas, a bag of apples, etc.); other stores yet will simply charge by the container.
Vegetables, including lettuce, corn, tomatoes, onions, celery, cucumbers, mushrooms, and more are
also sold at many grocery stores, and are purchased similarly to the way that fruits are. Grocery stores
typically stock more vegetables than fruit at any given time, as vegetables remain fresh longer than
fruits do, generally speaking.
It'd take quite a while to list everything else that today's massive grocery stores sell, but most
customers take the opportunity to shop for staples, or foods that play a prominent role in the average
diet, at the establishments. Staples include pasta, rice, flour, sugar, milk, meat, and eggs, and bread. All
the listed staples are available in prepackaged containers, but can be purchased "fresh" in some
grocery stores, wherein employees will measure and weigh fresh products and then provide them to
customers.Some of the most important landmarks in the United States include feats of architecture and modern
engineering. San Francisco, California, is a beautiful city on its own, but it is also home to The Golden
Gate Bridge, a 1.7 mile suspension bridge connecting the San Francisco Peninsula to the Marin
Headlands. The bridge holds the title of one of the Wonders of the Modern World according to the
American Society of Civil Engineers.
One of the most popular ways to appreciate the bridge is to take an excursion to the Golden Gate
National Recreation Area just outside of San Francisco. The park contains hiking trails, great spots for
picnicking, and offers some of the best vantage points for panoramic photographs of the bridge
leading into the city.
David recently had some friends visit him in San Francisco, and he made sure to include a visit to the
recreation area as part of their tour. They enjoyed walking through the trails, observing some of the
native wildlife, and even having a casual picnic in the park. David's friends were thankful that he
guided them through this impressive area of California. They made sure to take a group photograph
with the Golden Gate Bridge in the background. David's friends had the picture framed, and they later
presented it to David in order to thank him for his hospitality during their stay.Thanksgiving is a holiday celebrated predominantly in North America, and it possesses a different
meaning in each of the countries where it's acknowledged.
In the United States, Thanksgiving is a federal holiday (meaning all government employees and most
private employees are given a day off of work), and always takes places on the Fourth Thursday in
November, regardless of the date.
The holiday signifies the immense progress made by pilgrims, or some of the first travelers to North
America, at Plymouth Plantation circa 1621. It was at this time that the hungry and weary Pilgrims
were taught (by Native Americans) how to grow and produce food on North America's unique terrain.
Once they'd grown (and caught) an abundance of food, the Pilgrims were expectedly thankful, and
they celebrated alongside the Native Americans who provided them with such valuable assistance.
President Abraham Lincoln initiated the contemporary practice of Thanksgiving by calling for a "day of
Thanksgiving" during one of his Civil War addresses.
In America today, Thanksgiving remains firmly engrained in its historical roots, and is widely
considered to be a day for giving thanks for good food, good times, and family. Thanksgiving dinner
generally consists of turkey, mashed potatoes, stuffing, vegetables, gravy, and ample desserts. To be
sure, indulging in abundance is a cornerstone of the holiday, as doing so could only be possible if one
possesses abundance.A Christian holiday signifying the birth of Jesus, Christmas is widely celebrated and enjoyed across the
United States and the world. The holiday always falls on 25 December (regardless of the day of the
week), and is typically accompanied by decorations, presents, and special meals.
Specifically, the legend behind Christmas (and the one that most children are told) is that Santa Claus,
a bearded, hefty, jolly, and red-jacket-wearing old man who lives in the North Pole, spends the year
crafting presents with his elves, or small, festive, excited Santa-assistants. All the children who behave
throughout the year are admitted to the Good List, and will presumably receive their desired gifts on
Christmas, while those who don't behave are placed on the Naughty List, and will presumably
(although the matter is determined by parents) receive a lump of coal.
Santa Claus is said to fly around the Christmas sky in a sled powered by his magical reindeer, or
cold-resistant, mythically powered, individually named animals, delivering presents to each child's
house in the process. Santa is also expected to slide through chimneys to deliver these presents
(homes not equipped with chimneys might "leave the front door cracked open"), and children
sometimes arrange cookies or other treats on a plate for him to enjoy.
Gifts are placed underneath a Christmas tree, or a pine tree that's decorated with ornaments and/or
lights and is symbolic of the holiday. Additionally, smaller gifts may be placed inside a stocking, or a
sock-shaped, holiday-specific piece of fabric that's generally hung on the mantle of a fireplace (homes
without fireplaces might use the wall). A Christmas tree's ornaments, or hanging, typically spherical
decorations, in addition to the mentioned lights, may be accompanied by a star, or a representation of
the Star of Jerusalem that the Three Apostles followed while bringing Baby Jesus gifts and honoring
him, in the Bible.Abstract—This paper presents Keep In Touch, a pair of
wristbands that facilitates intimate long distance communication
between two people.
We designed a solution that enables two people to communicate

via their wristband. Each wristband is controlled by a micro-
controller and contains a vibrator, a capacitive touch sensor, an

accelerometer and an LED. It transfers data to the smartphone
by Bluetooth. The smartphone application uses Google Cloud
Messaging to transfer data to the partner’s smartphone. There
are two other features in this project: an activity tracker and a
proximity calculator. At the end of this project, we proved that
each feature was working on a pair of wristbands.
Index Terms—Connected Wristbands, IOT
I. INTRODUCTION

We are now in the era of the Internet of Things, the
number of connected objects has already surpassed
the number of people on Earth and is expected to surpass
20 billion by 2020. It is a fact that more and more objects are
connected. However people tend to distance themselves more
and more from one another. Fewer people are getting married
or are having children. In Japan for example in 1970 only
1.7% of 50-year-old men were not married and in 2015, this
number had skyrocketed to 20.1% according to the National
Institute of Population and Social Security Research [8].

In this context, we want to bring people closer by in-
troducing a new communication concept using wristbands.

Our wristband has multiple features: the main one is to
communicate with a partner by tapping on the wristband and
making the other wristband vibrate with the same pattern, the
second one is to tell the distance between the two partners
and the third one is to track one’s own activity by counting
steps during the day and by monitoring the quality of sleep
during the night. Each wristband is paired to a smartphone to
transmit data over the Internet.
A. Taptap
There is a project on Kickstarter (crowd funding website)
called ”Taptap”, similar to ours. Launched on October 16th
2013, it didn’t reach its $130K goal ($107K attained). The
developers did not give any update about the project since
February 2014 so it is very likely this project was abandoned.
It included a tap feature, an activity tracker, a smart alarm and
a gamepad. It was not open source so we could not use it.
B. Distance between two points
Many applications that include a map or that search for

itineraries also calculate the distance between two GPS co-
ordinates. However these applications usually calculates the

distance between two places or between a person and a place,
they do not calculate the distance between people as in our
project.
C. Activity tracker
There are a lot of activity trackers. The simplest one is a
basic step counter and one of the most complex includes heart
rate monitoring, sleep monitoring, run/bike tracking, sports
training, etc.
There are fewer night trackers than day trackers, probably
because we still don’t fully understand how sleep works. They
use accelerometers in order to detect motion during sleep, thus
they distinguish the different phases of sleep. With this, they
determine sleep quality. Moreover, some even use this data to
calculate the best time to wake the user up.
D. Project context
We realized this project during our 4

th year of Engineering
in Electronics and Computer Sciences for Embedded Systems
at Engineering School Polytech Paris UPMC. We introduced
the idea of the project and we decided of everything from the
needs to the technical realization. Our only limitations were
time and budget. We had 5 month to work on this project in
which 14 sessions of 8 consecutive hours were dedicated to
it. Our budget limit was e100 (around $120).
E. Paper contents
This paper explains the needs assessments, it details the
design of our solution, then it shows the verification we did
on our product and finally it concludes with the results of the
project.

II. NEEDS ASSESSMENTS

A. Functions
The main feature of Keep in Touch is to enable people to
communicate with each other whenever they want, in a discreet
and intimate way. When the holder taps the touch sensor on
the wristband, the tap pattern is saved and reproduced on the
partner’s wristband with vibrations. Couples can communicate
with short secret messages through their wristband and never
feel alone.
The second feature indicates the distance between the
couple. When the holder presses on a button, an LED blinks at
a frequency according to the distance between the two people.
Each blink represents symbolically a heartbeat. When the two
partners are far away the LED blinks slowly as their hearts are

2

Fig. 1. FAST diagram
sad to be separated, it blinks faster when they get nearer as
their hearts are happy and excited to be together. This feature
can be particularly useful when the couple is planning to meet
somewhere.
The third feature is health-oriented. It is an activity tracker
which counts steps during the day and monitors the quality of
sleep during the night. The phone displays the acquired data
so the holder can see his activity in detail.
B. Performance requirements / Specifications
Figure 1 shows the specifications of our product in a
FAST diagram, there are three features and one technical
specification. This section details these specifications.
1) Taps and vibrations: The communication is effectuated
with taps and vibrations. The sender taps on the wristband
like someone would do to communicate in Morse code, the
wristband saves the pattern and transfers it. The receiving
wristband then reproduces the pattern with vibrations. The
latency between sending and receiving the message must be
lower than 5 seconds.
2) Doki Doki: Pressing on the wristband button starts or
stops the ”Doki Doki” mode. Doki Doki is the sound of
hearbeats in Japanese. A blinking LED accelerates as the

two partners get closer, mirroring their increasing heart-rates.
The smartphone retrieves users’ coordinates so the distance
between them can be calculated. We get coordinates every 10
seconds and we update the new distance so the light can blink
accordingly.
3) Activity tracker: The day tracker runs at 20Hz since most
activities are within this range [9]. The microcontroller saves
data until the hourly synchronization with the smartphone.

During sleep, the user can choose to disable the communica-
tion between the wristband and the smartphone. The wristband

stores night activity until the user switches back to day mode.
We use a data sampling frequency of 10Hz. This way, being in
night mode during 9 hours generates 324,000 values. In order
to prevent memory overflow we calculate the average over 1
minute, which generates 540 values for the whole night.
4) Battery life: The battery life must be at least of 20 hours
so the user can use it for an entire day. In a really worst
case scenario, the consumption would be 50mA, so we need
a battery of at least 1,000 mAh to fulfill this constraint.
The wristband can be charged by a mini USB cable. That
way, we can charge it from a plug, from a computer or even
from a smartphone.
We use Lithium-ion (Li-ion) batteries because their size is
suitable for our needs. However they can present risks during
charging and they are not waterproof.
III. DESIGN

A. Resources
1) Hardware: The components used are listed in Table I
and Table II.

TABLE I
WRISTBAND COMPONENT LIST
Electronic part Price Comment (Euros)

4.08
Microcontroller with touch pins,
DSPIC33EP128MC 5 timers, 128kB flash, 7kB RAM,
202-I/SP 2 UART, ADC pins, low energy
consumption, small size (28 pins)

Sodial Bluetooth 4.10 module HC-06
Mini vibrator VM834 2.90 Same kind of vibrator as the ones

in smartphones

Grove accelerometer 10.90 Easy-to-use 3-axis accelerometer:
101020054 1 analog pin per axis

10.90
Battery specifications surpass the
Li-ion 3.7V project’s needs, measures of the
1050mAh battery wristband’s consumption should
provide a better estimation to
choose a smaller battery
Li-ion mini-USB charger 9.40 Charger that is compatible with the

chosen battery
Pololu 3.3V regulator 6.50 Buck-Boost regulator,
S7V8F3 output 3.3V up to 1A
10μF capacitor 0.12 Needed in the microcontroller base

power circuit

Transistor BS170 0.30

On/Off transistor to deliver current
to the vibrator from the battery,
controlled by the microcontroller
(the microcontroller’s ouput current
is too low to power the vibrator)
5mm red LED 0.25 Light for the ”doki doki” function
Push button 0.30 Button for the ”doki doki” function

Total 50.05 Around $55

3

Fig. 2. Electrical Circuit

TABLE II
DEVELOPMENT COMPONENT KIT
Electronic part Price Comment (Euro)
Pickit 3 46.17 PIC programmer
Serial USB-TTL cable 10.90 Cable to communicate between the
PIC and a computer, used to debug
Rapberry Pi 2 B Bundle 43.30 Used to host the web server with Noobs
Total 100.37 Around $110

Having a development kit and 2 wristbands give a total
of 200.42e, which is higher than the budget. However, the
Development Component Kit can be used for other projects
at the same time. Moreover we also payed some components
by ourselves.
2) Google Cloud Messaging: Google Cloud Messaging is
a service able to send Push messages over the Internet. This is
energy-efficient compared to a Pull method which is against
smartphones’ rules of use. A Pull method would forbid the
phone to go into sleep mode, draining the battery.
Google Cloud Messaging is a free service offered by
Google. The only limitation is that a message can only be
sent to up to 1000 phones at the same time. There is no limit
on the quantity of messages except the queue: when a phone
is unable to retrieve a message, when it is off or out of signal,
a queue of messages is created, limited to 200 messages.
3) MikroC: We used MikroElectronika’s MikroC for dsPIC
in order to program the microcontroller.
4) LAMP: LAMP stands for :
• Linux : The Operating System used.
• Apache : The HTTP server manages the communications
with the clients.

• MySQL : The database manager.
• PHP : The language used to generate dynamic web pages.
We used LAMP on a Raspberry Pi 2 B at home to create a
web server.
5) Android Studio: In order to program for Android, we
used Android Studio. We programmed the application in Java
and we tested it on our smartphones.
B. Architecture
1) Electrical circuit: Figure 2 shows the electrical circuit
realized for this project.
2) Data transfer process: Figure 3 shows the whole transfer
process between two wristbands. This section explains each
step of the process.
a) Step 1: user’s action: The user can do several actions.
For each one, the processing and the message to send are
different.
Tap on the touch sensor: The microcontroller measures the
duration of each tap and the duration between taps. It sends a
message for each tap when the user removes his finger from
the sensor. Messages include a number so the receiver can
put them in the right order if some messages are transmitted
slower than the others. The first message is numbered 0, the
second is numbered 1 and so on. When there have been no tap
for 4 seconds, the message number is reset to 0. The message
format is:
VIB, <tap number in the pattern>,
<duration since the last tap>,

4

<duration of the current tap>
An example of creating a message with 3 taps is shown on
Figure 4.
Click on the ”Where are you” button: The microcontroller
sends the message ”GPS?” to request the coordinates of the
partner.

Fig. 3. Transfer process
b) Step 2: transmitting data from the wristband to the
smartphone via Bluetooth: When a message is ready, the
microcontroller sends it to the Bluetooth module via serial
communication. The Bluetooth module then sends it to the
smartphone with which it is paired.
c) Step 3: processing the message by the smartphone:
The smartphone application processes the incoming messages
from the microcontroller.
1) if the message begins with ”VIB”, the smartphone
transfers it to the partner’s smartphone.
2) if the message is ”GPS?”, the application starts the
search of the smartphone’s coordinates before sending
the same message to the partner’s smartphone.
d) Step 4: sending data to the server: To send a message,
the application connects to a web page with the PHP post
method containing the user’s ID and the message to send.
e) Steps 5 and 6: getting the partner’s token: The web
page connects to the database with a ”select” request to get the
partner’s ID from the user’s ID. Then, knowing the ID, the web

page gets the corresponding Google Cloud Messaging token
the same way.
f) Step 7: sending a push notification to Google Cloud
Messaging: When the web page has all the information needed
to send the message to the partner, it creates a JSON object
including the information and it connects to Google Cloud
Messaging thanks to its dedicated API. The Google Cloud
Messaging service then sends the JSON object to the partner’s
smartphone in a few seconds.

g) Step 8: processing the received message by the smart-
phone:

1) if the message begins with ”VIB”, the app checks the
order of the messages. Sometimes, due to messages that
travel slower than others, the messages do not arrive
in the right order. In this case, the application saves
messages that arrived before they should and waits until
it receives missing messages to transfer them to the
wristband. An example is given on Figure 4, in this
example the 3rd message arrives before the 2nd one so
the application saves it and waits for the 2nd message
before sending them to the wristband in the right order.
We chose to transfer directly each message in order to
have a more ”real-time” feel.
2) if the message is ”GPS?”, the application activates the
coordinates search. When coordinates are found, they
are sent to the partner in the following format: GPS,
< latitude > . < longitude >
h) Step 9: Bluetooth transmission from the smartphone
to the wristband: When a message is ready, it is sent thanks
to the smartphone’s Bluetooth module. If the wristband and
the smartphone are not paired, a message appears on the
smartphone for a few seconds.

i) Step 10: processing the received message by the micro-
controller: The received messages are the ones sent in step 1.

The microcontroller receives each tap, one by one, with a delay
due to the Internet transmission (50 to 500ms) and Bluetooth
transmission (50 to 100ms). As the transmission delay can be
different for each message, we introduce a short delay: the
first tap of a sequence (tap number = 0) makes the wristband
vibrate one second after its reception. This is a security delay
which ensures that we receive the second tap message before
the end of the first vibration. This way, we can reproduce
precisely the tap pattern in vibrations and the communication
is almost instant (less than 2 seconds of delay between a tap
and its corresponding vibration). An example of reproducing
a 3-tap pattern is shown in Figure 4. In this example, the 2nd
message arrived late, if we had not introduced a delay it would
not be possible to reproduce the pattern. The microcontroller
receives the vibrations messages ordered and stores them. It
uses a 10-message circular buffer to limit memory usage.

C. Programming
1) Micro-controller Programming:
a) IDE: We used MikroElektronica’s MikroC for dsPIC
which is well known for its libraries.

5

Fig. 4. Transmitting a tap message

b) Taps and vibrations: We used one timer to count the
pressing duration and one to control the vibration duration.
These timers can count up to 4.55 seconds given that the
microcontroller runs at 7.33 Mhz. The first timer starts when
the user touches the surface and it stops when the user removes
his finger so the timer calculates the pressing duration. The
timer continues to count to give the duration between two taps.
The second timer controls the vibrator. When the wristband
must vibrate, the vibrator and the timer start at the same time,
when the timer reaches the given vibration duration, both the
vibrator and the timer stop. Then the timer starts again and
counts until it reaches the given no-vibration duration. As both
timers can count only up to 4.55 seconds, if the user presses
longer than 4.55 seconds, the exceeding time is not taken into
account.
c) Step Counting: We have two ways to count steps. As
we want a 1 minute resolution, we first thought of fusing two
16-bit timers together to form a 32-bit timer. That way, while
a 16-bit timer can count up to 4.55 seconds, a 32-bit timer
can go as far as 3.45 days. With this 32-bit counter, using a
one-minute interruption would be easy.

A second solution appeared to us, as we thought to spare
these timers for other applications. Using a 4-second timer, a
variable would increase by one every time the timer reaches
its target. When this counter reaches 15, 1 minute would have
passed.
In order to configure timers on a PIC, we need to setup
configuration variables[7]. Their addresses depend on the
PIC used. MikroC allows to access the configuration pins
individually. This helps understanding, as these variables have
names that you can recognize instead of numbers:
T2CON = 0;
T2CONbits.TCKPS = 3; //prescaler value
T2CONbits.T32 = 1; //use 32-bit timer
T2CONbits.TCS = 0; //source of the timer
T2CONbits.TON = 1; //on/off

However this makes the code more confusing as you have
to know the effect of each bit by heart:
T2CON = 0b1000000000111010;

Setting example for a 32-bit timer:
void initTimer(long matchingValue){
//Reset bit configuration
T2CON = 0; T3CON = 0;
//Reset timer value
TMR2 = 0; TMR3 = 0;
//Set timer period
PR3 = matchingValue & 0xFFFF;
PR2 = value >> 16;
//Timer division by 256
T2CONbits.TCKPS = 3;
//Enable 32-bit timer
T2CONbits.T32 = 1;
//Use internal clock
T2CONbits.TCS = 0;
//Clear interruption flag
T3IF_bit = 0;
//Enable interrupt
T3IE_bit = 0;
//Start the timer
T2CONbits.TON = 1;
}

Setting example for a 16-bit timer, generating an interrup-
tion every 4 seconds and counting up to 60 seconds.

6

void InitTimer1(void){
//Note here an hardly readable version
of T1CON
T1CON = 0x0030;
T1IE_bit = 1;
T1IF_bit = 0;
IPC0 = IPC0 | 0x1000;
PR1 = 57578;
}
void Timer1Interrupt(void)
iv IVT_ADDR_T1INTERRUPT{
static counter;
counter++;
if(counter > 15){
//Do stuff, 60 seconds have passed
}
//Clear the interruption
T3IF_bit = 0;
}
In order to count steps we use a maximum-searching
algorithm, as we saw that when we walk like in Figure 5,
each step creates a maximum.

Fig. 5. Acceleration during walk
We use a 3-point-sliding window and if Amplitudemax −
Amplitudemin > T hreshold then a step is recognized.
This method induces a lot of errors, such as random moves
counted as steps. Our tests showed that it has a 70% accuracy.
Various studies [9] show that activities such as walking and
running have particular characteristics. They are regular, with
a frequency between 1.5Hz and 3Hz. Thus using a pattern
recognition algorithm within this frequency would increase the
accuracy.

2) Android Application: To develop the Android applica-
tion we used the development software Android Studio and our

phones to test the application. One was running on Lollipop
and the other was running on Marshmallow.
a) User interface: Here we present the graphical aspects
of the app and explain briefly how they work and how the
user can use them.

The application is the only user interface. When opening the
app, the user has to sign to go further. The user then enters a
menu page from which he can navigate in the app.
Configuration pages: There are two pages to configure the
app. The first one enables the user to identify his wristband
and to make the app connect to it. The second one enables the
user to set his partner so he can communicate with the right
person.
Trackers pages: There are two pages that give results about
the user’s activity.
Figure 6 below shows the user interface for the day tracker.

Fig. 6. Keep In Touch Day Tracker page
These two pages show a bar chart representing the number
of steps or the average acceleration per minute. The chart
implements the MPAndroidChart [4] library which enables the
user to see a smooth chart, zoom on it and navigate among
data. We added two buttons ”Previous Day” and ”Next Day”
so the user can also see his daily history.

Debugging page: This page is responsible for commu-
nications with the wristband and with the server. We can

send messages to both manually and see incoming messages.

7

Further work on the app should include removing this page
and hiding the communications from the user.

b) Behind the interface: We here present how the invis-
ible part of the app works.

Communicating with the wristband: We used a Bluetooth
chat example provided by Google [3] and we adapted it to
communicate with the wristband. It allows the app to connect
to a Bluetooth device and reconnect automatically if the
connection is lost. It handles incoming messages by launching
a process depending on the message (GPS or tap message) and
sends messages to the wristband.
Communicating with Google Cloud Messaging: As we used
Google Cloud Messaging to transfer data from the server to
the app, we implemented the communication based on an
example provided by Google [6]. It registers the smartphone
at the Google Cloud Messaging service and then it waits for
incoming messages from the service and handles them.
Reading and writing in the internal database: The internal
database saves data for the day and night activity trackers. It is
structured to store activity data according to timestamps. We
used the SQL library [2] to write data received from Bluetooth
and to read data intended for the trackers pages. We optimized
the reading part by reading from the lastly added value as the
user will more often want to see recent data than old data.
Communicating with the web server: We use HTTP POST
requests to communicate with the web server. This method
is widely used and allows us to send a message and get a
response from the server. We process the response depending
on the case, for example on the connection page we check if
the connection succeeded or failed.
Dealing with coordinates: We used the built-in
”LocationManager”[1] to get the location. It asks the
network and GPS provider for GPS coordinates. When the
provider finds the latitude and the longitude (it can take
several seconds), we can process the new coordinates and
send them to the server.
3) Server:
a) SQL Table: We use a SQL Table to store user data.
The different fields are:
• Id: User’s nickname, limited to 16 characters.
• Token: Google Cloud Messaging’s token for user’s phone.
Unique by application and by phone.
• Encrypted Password: Password encrypted in sha5, used
for connection.
• Partner’s id: Partner’s nickname.
b) Internet pages: AddPartnerId: this page updates the
field ”Partner’s ID”. For security reasons and to prevent
users from communicating with strangers, communications are
allowed only for partners that have added each other.
Connection: Page used to log in. To avoid compromising
user data, transmitted passwords are encrypted. At each log in
we check the user’s token. If this value does not match with
the value stored in the database, it is updated.
Inscription: Page used to create the user in the database.
Num2Tok: This page takes the ID and retrieves the token
from the database.

testSend: This page is the most complex one on the server.
It uses cURL plugin, a library used to make HTTP requests. It
allows us to send PUSH requests to Google Cloud Messaging.

IV. VERIFICATION

At the end of this project, we have two prototypes on a
breadboard. They prove that the main functions are working.
A. Taps and vibrations
This is the main feature of the wristbands and it is fully
functional. Tests showed that many tap patterns on a wristband

are reproduced in vibrations on the other. Slow and middle-
speed patterns are always reproduced but very fast patterns

(more than 4 taps per second) may miss a tap.
B. GPS
Apart from a bug in the LocationManager API, which
sometimes prevents the coordinates from being found, the
”Doki Doki” feature works well. Pressing the button makes
both smartphones search their coordinates, in less than 10

seconds the distance is calculated and the LED blinks ac-
cording to the distance. As we take raw coordinates, the

location is not always precise: experiments showed that the
error between the calculated distance and the real distance
can go up to 200 meters. The bug in the LocationManager
is known among programmers and the current solution is to
reboot the smartphone. However the bug appears again after
a few days. Another solution to test in further work is to use
the FusedLocation library [5].
C. Activity tracker

a) Day tracker: The microcontroller computes accelera-
tion and detects steps with an accuracy of 70%. It sends the

number of steps detected to the smartphone which saves them
in the database. In our final version, we have not encountered
any bug in the transmission part nor in the database.
b) Sleep tracker: On the app side, we implemented a
function to receive multiple sleep data at the same time. We
tested it manually by connecting the Bluetooth module to an
Arduino and sending sample data. We tested the database in
the Android app to read and write sleeping information. The
app side of the sleep tracker is ready but we did not implement
it on the microcontroller since we focused on the day tracker.
The sleep tracking algorithm is simpler than the one for step
detection so completing the sleep tracker should be easy.
D. Battery life
Firstly, we choose a more powerful battery than what we
needed. But since the wristband is not fully finished we did
not measure the experimental battery life of the wristband.
However each prototype is powered with its own battery so
the power circuit is functional.

8

E. Microcontroller program
Tests on each feature showed great results however when
we tested both taps and Doki Doki at the same time, one of
these features did not work. It means that both features do not
work simultaneously.
F. Android app

The Android app works when we test each function sepa-
rately but it does not work correctly when we test Tap feature

and Doki Doki feature together.
V. DISCUSSION

During this project, we set the needs for a complete proto-
type knowing that we would not be able to meet all of them

entirely in the given time. This is why we set priorities on
features so we could show at least a working prototype. All
features work independently, however fusing them was not as
successful.
This project is one of the biggest projects of our degree
program, both in technical and time-consuming aspects. We
learned a lot of things about PIC timers, Android programming
and about how to design a complete solution in the field of
connected things. Even though we had 8h per week dedicated
to this project (total 112h), we also worked on it during
holidays. This is how we managed to make all features work.
Its applications are various. It is originally designed for
couples. It could also work for a parent-child relationship or
any strong bond relationship. Some aspects could be reused for
patients in hospitals who cannot easily reach the call button.
On a side note, we thought afterward that this would be a
massive tool for cheating because it can be used to stealthily
communicate.
This project is not complete and there are still many
things to work on. On the microcontroller program, further
developments would be to start miniaturization and to improve
the algorithms, especially for the step counting. In the Android
application, further work should include analysing the bug
that prevents Tap feature and Doki Doki feature from working
together. There are also a few improvements that can be made,
such as removing the debug page or adding a better separation
between interface code and communication code.
VI. CONCLUSION

We presented Keep in Touch, a solution enabling people to
communicate with each other via connected wristbands. We
built two prototypes and made a proof-of-concept that shows
that it is technically possible for two people to communicate
with each other via wristbands.
We used existing technologies and adapted them for our
usage. Among those technologies, the more important ones
were:

• A touch sensor, a vibrator, an accelerometer and a smart-
phone allowed our system to interact with the user,

• Bluetooth, HTTP REST and Google Cloud Messaging
allowed us to transfer data,
• SQL databases allowed us to store data,

• A PIC microcontroller and Android allowed us to process
data.
We wrote a microcontroller program that controls its timers
so the user’s tap pattern can be reproduced in vibrations. This
program also counts step when the user is walking. We proved
that this program is able to measure and reproduce tap patterns
up to 25 Hz. Our step counting algorithm has shown to detect
around 70% of the steps. We wrote an Android application
that transfers data between the two users and allows them
to see their physical activity. Our application has proved it is
able to handle messages and process them correctly when each
feature is tested separately. We designed a simple and efficient
protocol for messages so that only useful data is transmitted
and parsing data is easy for the receiver.
ACKNOWLEDGMENT

We would like to thank Mr. Hilaire for monitoring our
project. He suggested good ideas, he gave us useful advice
and he motivated us with his enthusiasm. We would also like
to thank Mr. Dickmann and Mr. Mitchell, our English teachers
who helped us writing this paper.
REFERENCES

[1] Google. Locationmanager. [Online]. Available: https://developer.android.
com/reference/android/location/LocationManager.html
[2] ——. Saving data in sql databases. [Online]. Available: https:
//developer.android.com/training/basics/data-storage/databases.html
[3] Google Sample. Bluetooth example. [Online]. Available: https://github.
com/googlesample/android-BluetoothChat
[4] P. Jahoda. Mp android chart. [Online]. Available: https://github.com/
PhilJay/MPAndroidChart
[5] kpbird. Fused location example. [Online]. Available: https://github.com/
kpbird/fused-location-provider-example

[6] R. Kundan. Google cloud messaging exam-
ple. [Online]. Available: http://www.androidwarriors.

com/2015/10/push-notification-using-gcm-in-android.html?
showCommentx3d1445487966266
[7] Microchip Technology Inc. [Online]. Available: http://ww1.microchip.
com/downloads/en/DeviceDoc/70000657H.pdf
[8] National Institute of Population and Social Security Research, “Population
statistics of japan 2011.”
[9] A. Sharma et al., “Frequency based classification of activities using
accelerometer data,” 2008.

The authors are studying Electronics and Computer Science for Embedded
Systems at Polytech Paris UPMC School of Engineering (expecting 2017). In
the beginning of 2016, date of this paper’s project, they were in the equivalent
of first year of Masters. They do most of their projects together.General questions : 

What do you get out of engineering that you couldn’t get from any other kind of work?

For me, the main thing that I get out of engineering that I couldn’t get from any other kind of work is the ability to think about an idea and be able to make it a reality by only using my skills. Indeed in other kinds of work, they may have ideas but at some point, they may need some kind of expertise. Thus as an engineer, I get the satisfaction to have the ability to make my ideas come true. Then I couldn’t get from any other work the evolution possibility as an engineer, in terms of work and career. Indeed technology constantly evolves, thus the engineering job constantly evolves with it so we never get bored.

What personal characteristics do you feel are necessary to be a successful engineer?

To be a successful engineer, I think you have to be mostly a curious person and be interested in your field. I also think that you have to be autonomous. Indeed if you encounter a problem you have to be able to solve it by yourself because it may be a very specific problem that you could hardly find a solution on the internet.

Describe a time when you questioned your choice of engineering as a career or major.

Since I was little I always was tech-savvy and had a facility with technology. Moreover, I always liked new technology, thus I choose to combine my passion and my professional career. 

EISE5-questions :
Describe the job of an embedded systems engineer in general terms

The job of an embedded systems engineer covers a very large field, from hardware to software. Indeed it is the fusion between computer science and electronics. So the core of an embedded system engineer is to design electronic devices with embedded constraints such as being low power consumption, small size, and being reliable. Thus to meet all these constraints it is necessary to have full control over the code and how it interacts with the hardware to be optimized. 

Explain what the need is for an infinite loop in embedded systems?

In embedded systems, it’s really common to use a microcontroller to carry out a precise task. And to do so we implement a code in a microcontroller that controls the hardware. And similarly to any other code implementation, it has a beginning and an end. In most cases, we launch a code when we want it to do a task but in an embedded system we need it to execute the code indefinitely hence the infinite loop.  

Why are C and C++ still very popular and widely supported in embedded firmware development?
C and C++ are very popular and widely supported in embedded firmware development because the C language can be a very low-level language and it’s considered a very fast and optimized language and can be easily readable and understandable. And the C++ may be less fast but it adds a more readable layer on top of the C language. 

What is RTOS and what is it used for?

An RTOS is a real-time operating system. So it means that the operating system of an embedded system has to meet some real-time constraints. For example, for a self-driving car, it is mandatory to have an RTOS to process signals from many sensors and to adapt them in real-time to the trajectory of the vehicle or its pace. 

